# SPIRE Agent Configuration
# This file defines the configuration for the SPIRE agent, which runs on each node
# and is responsible for attesting the node's identity and providing workload identity
# to pods running on that node.
#
# Security Considerations:
# 1. Node attestation must be properly secured
# 2. Workload attestation must be properly configured
# 3. Key management must be properly configured
# 4. Socket paths must be properly secured
# 5. Health checks must be properly configured
# 6. Metrics collection must be properly secured
# 7. Logging must be properly configured
# 8. Network access must be properly restricted
# 9. Plugin configurations must be properly secured
# 10. Workload API must be properly secured
# 11. Node attestation must be hardened
# 12. Socket security must be configured
# 13. Rate limiting must be configured
# 14. TLS must be properly configured
# 15. Backup must be properly configured

apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-agent
  namespace: spire
data:
  # Agent configuration file
  agent.conf: |
    # Agent configuration
    # Required: Basic agent settings
    # Best Practice: Configure all required settings
    # Security Note: Agent configuration is critical for security
    agent {
      # Required: Data directory
      # Best Practice: Use dedicated data directory
      # Security Note: Data must be properly secured
      data_dir = "/run/spire/data"
      
      # Required: Log level
      # Best Practice: Use info for production
      # Security Note: Debug may expose sensitive information
      log_level = "info"
      
      # Required: Log format
      # Best Practice: Use json for machine processing
      # Security Note: Format affects log analysis
      log_format = "text"
      
      # Required: Server address
      # Best Practice: Use Kubernetes service name
      # Security Note: Must be properly secured
      server_address = "spire-server"
      
      # Required: Server port
      # Best Practice: Use standard port 8081
      # Security Note: Port must be properly secured
      server_port = "8081"
      
      # Required: Agent socket path
      # Best Practice: Use dedicated socket directory
      # Security Note: Socket must be properly secured
      socket_path = "/run/spire/sockets/agent.sock"
      
      # Required: Trust domain
      # Best Practice: Match server's trust domain
      # Security Note: Must be properly managed
      trust_domain = "example.org"
      
      # Required: Workload API socket directory
      # Best Practice: Use dedicated socket directory
      # Security Note: Socket must be properly secured
      workload_api_socket_dir = "/run/spire/sockets"

      # Required: TLS configuration
      # Best Practice: Use strong TLS settings
      # Security Note: TLS is critical for security
      tls {
        # Required: Minimum TLS version
        # Best Practice: Use TLS 1.2 or higher
        # Security Note: Older versions are vulnerable
        min_version = "1.2"
        
        # Required: Cipher suites
        # Best Practice: Use strong cipher suites
        # Security Note: Weak ciphers are vulnerable
        cipher_suites = [
          "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
          "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        ]
      }

      # Required: Rate limiting
      # Best Practice: Configure rate limits
      # Security Note: Prevents DoS attacks
      rate_limit {
        # Required: Rate limit settings
        # Best Practice: Set appropriate limits
        # Security Note: Must be properly tuned
        requests_per_second = 100
        burst_size = 200
      }

      # Required: Socket security
      # Best Practice: Configure socket security
      # Security Note: Sockets must be properly secured
      socket_security {
        # Required: Socket permissions
        # Best Practice: Use minimal permissions
        # Security Note: Must be properly secured
        socket_permissions = "0660"
        
        # Required: Socket ownership
        # Best Practice: Use dedicated user
        # Security Note: Must be properly secured
        socket_owner = "spire"
        socket_group = "spire"
      }

      # Required: Workload API security
      # Best Practice: Configure API security
      # Security Note: API must be properly secured
      workload_api {
        # Required: API configuration
        # Best Practice: Use HTTPS
        # Security Note: Must be properly secured
        https {
          # Required: Bind address
          # Best Practice: Use 0.0.0.0 for cluster access
          # Security Note: Must be properly secured
          bind_address = "0.0.0.0"
          
          # Required: Bind port
          # Best Practice: Use standard port 8445
          # Security Note: Port must be properly secured
          bind_port = "8445"
        }
      }
    }

    # Plugin configurations
    # Required: At least one plugin of each type
    # Best Practice: Configure all required plugins
    # Security Note: Plugins must be properly secured
    plugins {
      # Required: Node attestation plugin
      # Best Practice: Use k8s_psat for Kubernetes
      # Security Note: Node attestation is critical for security
      NodeAttestor "k8s_psat" {
        plugin_data {
          # Required: Cluster name
          # Best Practice: Match server's cluster name
          # Security Note: Must be properly managed
          cluster = "demo-cluster"
          
          # Required: Token path
          # Best Practice: Use projected service account token
          # Security Note: Token must be properly secured
          token_path = "/var/run/secrets/tokens/spire-agent"
        }
      }

      # Required: Key manager plugin
      # Best Practice: Use persistent storage in production
      # Security Note: Key management is critical for security
      KeyManager "memory" {
        plugin_data {
          # Required: Key storage configuration
          # Best Practice: Use persistent storage in production
          # Security Note: Keys must be properly secured
        }
      }

      # Required: Workload attestor plugin
      # Best Practice: Use k8s for Kubernetes
      # Security Note: Workload attestation is critical for security
      WorkloadAttestor "k8s" {
        plugin_data {
          # Required: Kubelet socket path
          # Best Practice: Use standard kubelet socket
          # Security Note: Socket must be properly secured
          kubelet_socket_path = "/var/run/kubernetes/kubernetes.sock"
        }
      }
    }

    # Health check configuration
    # Required: For proper health monitoring
    # Best Practice: Enable all health checks
    # Security Note: Health checks must be properly secured
    health_checks {
      # Required: Listener configuration
      # Best Practice: Enable HTTP health checks
      # Security Note: Health checks must be properly secured
      listener_enabled = true
      
      # Required: Health check bind address
      # Best Practice: Use 0.0.0.0 for cluster access
      # Security Note: Must be properly secured
      bind_address = "0.0.0.0"
      
      # Required: Health check port
      # Best Practice: Use standard port 8080
      # Security Note: Port must be properly secured
      bind_port = "8080"
      
      # Required: Liveness probe path
      # Best Practice: Use standard /live path
      # Security Note: Probe must be properly secured
      live_path = "/live"
      
      # Required: Readiness probe path
      # Best Practice: Use standard /ready path
      # Security Note: Probe must be properly secured
      ready_path = "/ready"
    }

    # Telemetry configuration
    # Optional: Can be omitted if not using metrics
    # Best Practice: Enable metrics in production
    # Security Note: Metrics must be properly secured
    telemetry {
      # Required: Prometheus configuration
      # Best Practice: Use standard Prometheus port
      # Security Note: Metrics must be properly secured
      Prometheus {
        # Required: Metrics bind address
        # Best Practice: Use 0.0.0.0 for cluster access
        # Security Note: Must be properly secured
        bind_address = "0.0.0.0"
        
        # Required: Metrics port
        # Best Practice: Use standard port 9090
        # Security Note: Port must be properly secured
        bind_port = "8088"
      }
    }

    # Required: Node attestation hardening
    # Best Practice: Configure attestation
    # Security Note: Must be properly secured
    node_attestation {
      # Required: Attestation configuration
      # Best Practice: Use strong attestation
      # Security Note: Must be properly secured
      k8s_psat {
        # Required: Token path
        # Best Practice: Use projected service account token
        # Security Note: Token must be properly secured
        token_path = "/var/run/secrets/tokens/spire-agent"
        
        # Required: Token audience
        # Best Practice: Use specific audience
        # Security Note: Must be properly configured
        token_audience = "spire-server"
        
        # Required: Token expiration
        # Best Practice: Use short expiration
        # Security Note: Must be properly configured
        token_expiration = "1h"
      }
    }

    # Required: Backup configuration
    # Best Practice: Configure backup
    # Security Note: Must be properly secured
    backup {
      # Required: Backup directory
      # Best Practice: Use dedicated backup directory
      # Security Note: Must be properly secured
      backup_dir = "/var/lib/spire/backup"
      
      # Required: Backup interval
      # Best Practice: Set appropriate interval
      # Security Note: Must be properly tuned
      backup_interval = "6h"
      
      # Required: Maximum backups
      # Best Practice: Set appropriate limit
      # Security Note: Must be properly tuned
      max_backups = 24
    } 